02/23/2023 07:03:52 PM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 64, in put
    r = RedisCrud().update_note_in_redis(note_id, request.data, request.user.id)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\redis_utils.py", line 61, in update_note_in_redis
    self.redis.set(user_id, json.dumps(notes_dict.values))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type builtin_function_or_method is not JSON serializable
02/23/2023 07:03:52 PM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 64, in put
    r = RedisCrud().update_note_in_redis(note_id, request.data, request.user.id)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\redis_utils.py", line 61, in update_note_in_redis
    self.redis.set(user_id, json.dumps(notes_dict.values))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type builtin_function_or_method is not JSON serializable
02/23/2023 07:14:36 PM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 64, in put
    r = RedisCrud().update_note_in_redis(note_id, request.data, request.user.id)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\redis_utils.py", line 61, in update_note_in_redis
    self.redis.set(user_id, json.dumps(notes_dict.values()))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type dict_values is not JSON serializable
02/23/2023 07:14:36 PM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 64, in put
    r = RedisCrud().update_note_in_redis(note_id, request.data, request.user.id)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\redis_utils.py", line 61, in update_note_in_redis
    self.redis.set(user_id, json.dumps(notes_dict.values()))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\json\encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type dict_values is not JSON serializable
02/24/2023 09:58:27 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 235, in is_valid
    raise ValidationError(self.errors)
rest_framework.exceptions.ValidationError: {'user': [ErrorDetail(string='Incorrect type. Expected pk value, received CustomUser.', code='incorrect_type')]}
02/24/2023 09:58:27 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 235, in is_valid
    raise ValidationError(self.errors)
rest_framework.exceptions.ValidationError: {'user': [ErrorDetail(string='Incorrect type. Expected pk value, received CustomUser.', code='incorrect_type')]}
02/24/2023 10:14:38 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 28, in post
    serializer.save()
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 25, in create
    notes = Notes.objects.create(**validated_data)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\query.py", line 669, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\base.py", line 541, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 237, in __set__
    raise ValueError(
ValueError: Cannot assign "4": "Notes.user" must be a "CustomUser" instance.
02/24/2023 10:14:38 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 28, in post
    serializer.save()
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 25, in create
    notes = Notes.objects.create(**validated_data)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\query.py", line 669, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\base.py", line 541, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 237, in __set__
    raise ValueError(
ValueError: Cannot assign "4": "Notes.user" must be a "CustomUser" instance.
02/24/2023 10:17:54 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 28, in post
    serializer.save()
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 25, in create
    notes = Notes.objects.create(**validated_data)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\query.py", line 669, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\base.py", line 541, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 237, in __set__
    raise ValueError(
ValueError: Cannot assign "4": "Notes.user" must be a "CustomUser" instance.
02/24/2023 10:17:54 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 28, in post
    serializer.save()
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 25, in create
    notes = Notes.objects.create(**validated_data)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\query.py", line 669, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\base.py", line 541, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 237, in __set__
    raise ValueError(
ValueError: Cannot assign "4": "Notes.user" must be a "CustomUser" instance.
02/24/2023 10:19:17 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 28, in post
    serializer.save()
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 25, in create
    notes = Notes.objects.create(**validated_data)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\query.py", line 669, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\base.py", line 541, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 237, in __set__
    raise ValueError(
ValueError: Cannot assign "4": "Notes.user" must be a "CustomUser" instance.
02/24/2023 10:19:17 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 28, in post
    serializer.save()
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 25, in create
    notes = Notes.objects.create(**validated_data)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\query.py", line 669, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\base.py", line 541, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 237, in __set__
    raise ValueError(
ValueError: Cannot assign "4": "Notes.user" must be a "CustomUser" instance.
02/24/2023 10:19:45 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 28, in create
    label = Labels.object.get(name=label_name, user=self.initial_data.get('user'))
            ^^^^^^^^^^^^^
AttributeError: type object 'Labels' has no attribute 'object'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 28, in post
    serializer.save()
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 30, in create
    label = Labels.object.create(name=label_name, user=self.initial_data.get('user'))
            ^^^^^^^^^^^^^
AttributeError: type object 'Labels' has no attribute 'object'
02/24/2023 10:19:45 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 28, in create
    label = Labels.object.get(name=label_name, user=self.initial_data.get('user'))
            ^^^^^^^^^^^^^
AttributeError: type object 'Labels' has no attribute 'object'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 28, in post
    serializer.save()
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\serializers.py", line 30, in create
    label = Labels.object.create(name=label_name, user=self.initial_data.get('user'))
            ^^^^^^^^^^^^^
AttributeError: type object 'Labels' has no attribute 'object'
02/24/2023 10:28:17 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 235, in is_valid
    raise ValidationError(self.errors)
rest_framework.exceptions.ValidationError: {'user': [ErrorDetail(string='Incorrect type. Expected pk value, received CustomUser.', code='incorrect_type')]}
02/24/2023 10:28:17 AM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 235, in is_valid
    raise ValidationError(self.errors)
rest_framework.exceptions.ValidationError: {'user': [ErrorDetail(string='Incorrect type. Expected pk value, received CustomUser.', code='incorrect_type')]}
02/24/2023 12:35:17 PM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 235, in is_valid
    raise ValidationError(self.errors)
rest_framework.exceptions.ValidationError: {'user': [ErrorDetail(string='Incorrect type. Expected pk value, received CustomUser.', code='incorrect_type')]}
02/24/2023 12:35:17 PM : logging_confiq.logger : 
Traceback (most recent call last):
  File "C:\Users\RJ EMPIRE\Desktop\Django\FundooNotes\Notes\views.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "C:\Users\RJ EMPIRE\Desktop\env\env03\Lib\site-packages\rest_framework\serializers.py", line 235, in is_valid
    raise ValidationError(self.errors)
rest_framework.exceptions.ValidationError: {'user': [ErrorDetail(string='Incorrect type. Expected pk value, received CustomUser.', code='incorrect_type')]}
